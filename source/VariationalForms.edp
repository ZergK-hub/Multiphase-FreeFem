
varf DiffusionBiLinear(p,xi) =
    
    int2d(Th)(
        
        ct(SwIter)*phiIter*p*xi
   
        +(dt*K*lambdaT(SwIter)*grad(p)'*grad(xi))
    )
    
    +on(labelProd, p=Pprod); /*penalty term*/


varf DiffusionLinear(p,xi) = 

    int2d(Th)(ct(SwIter)*phiIter*pOld*xi)

    +int1d(Th,labelInj)((1-PointInj)*dt*0.25*qInj*xi)

    +RHSdiffusion[]

    +on(labelProd, p=Pprod)
    ; /*penalty term*/

varf TransportBiLinearPoint(Sw, psi) =
    int2d(Th)(
        
        (phiIter)*Sw*psi
        +(phi0*(cr+cw)*p)*Sw*psi
        -(phi0*(cr+cw)*pOld)*Sw*psi
        /*phiIter*Sw*psi*/
    )
   +int2d(Th)(
        +dt*mult2*Sw*grad(p)'*grad(psi)
        +dt*multeps*grad(Sw)'*grad(psi)
    )
    -int1d(Th,labelProd)(
        dt*mult2*Sw*(dx(p)*N.x*psi+dy(p)*N.y*psi)
    )
    
    ;

varf TransportLinearPoint(Sw,psi) =
     int2d(Th)(
         -dt*mult1*grad(p)'*grad(psi)
        +dt*mult2*SwIter*grad(p)'*grad(psi)
        +phiIter*SwOld*psi
    )
    
    -int1d(Th, labelProd)(
        +dt*mult1*(dx(p)*N.x*psi+dy(p)*N.y*psi)
        -dt*mult2*SwIter*(dx(p)*N.x*psi+dy(p)*N.y*psi)
    )
   
   ;

varf TransportBiLinear(Sw, psi) =

    int2d(Th)(
        
        (phiIter)*Sw*psi
        +(phi0*(cr+cw)*p)*Sw*psi
        -(phi0*(cr+cw)*pOld)*Sw*psi
        /*phiIter*Sw*psi*/
    )
   +int2d(Th)(
        +dt*mult2*Sw*grad(p)'*grad(psi)
        +dt*multeps*grad(Sw)'*grad(psi)
    )
    -int1d(Th,labelProd)(
        dt*mult2*Sw*(dx(p)*N.x*psi+dy(p)*N.y*psi)
    )
    +on(labelInj,Sw=SwInj)
    ;

varf TransportBiLinear1(Sw, psi) =

    int2d(Th)(
        
        (phiIter)*Sw*psi
        +(phi0*(cr+cw)*p)*Sw*psi
        -(phi0*(cr+cw)*pOld)*Sw*psi
        /*phiIter*Sw*psi*/
    );
varf TransportBiLinear2(Sw, psi) =
   int2d(Th)(
        +dt*mult2*Sw*grad(p)'*grad(psi)
        +dt*multeps*grad(Sw)'*grad(psi)
    )
    -int1d(Th,labelProd)(
        dt*mult2*Sw*(dx(p)*N.x*psi+dy(p)*N.y*psi)
    )
    +on(labelInj,Sw=SwInj)
    ;

varf TransportLinear(Sw,psi) =
    
    int2d(Th)(
         -dt*mult1*grad(p)'*grad(psi)
        +dt*mult2*SwIter*grad(p)'*grad(psi)
        +phiIter*SwOld*psi
    )
    
    -int1d(Th, labelProd)(
        +dt*mult1*(dx(p)*N.x*psi+dy(p)*N.y*psi)
        -dt*mult2*SwIter*(dx(p)*N.x*psi+dy(p)*N.y*psi)
    )

    +on(labelInj,Sw=SwInj)
    ;