
//fespace Vh(Th,P2);

cout << "Number of degree of freedom = " << Vh.ndof << endl;
cout << "Number of degree of freedom / ELEMENT = " << Vh.ndofK << endl;
int TNumber = Th(InjSourceX, InjSourceY).nuTriangle; //the triangle number in point
cout<<"the triangle number = "<<TNumber<<endl;
int k = TNumber, kdf = Vh.ndofK; 
cout << "Degree of freedom of element " << k << ":" << endl;
for (int i = 0; i < kdf; i++)
{
 cout << Vh(k,i) << " ";
}
 cout << endl;
int[int] DoF(kdf);
for (int i = 0; i < kdf; i++)
{
 DoF(i)=Vh(k,i);
}
 cout << endl;

Vh fx=x, fy=y;

real[int] Fx=fx[];

real[int] Fy=fy[];

int DoFnum;

cout << "Coordinates of DoF of element " << k << ":" << endl;
{ofstream f("./Data.txt");
for (int i = 0; i < kdf; i++){
  cout << fx[][DoF(i)] << " "<< fy[][DoF(i)]<< endl;
  if ((fx[][DoF(i)]==InjSourceX)&(fy[][DoF(i)]==InjSourceY))
    {   
        DoFnum=DoF(i);
        f<<"Coords for DoF #\t"<<DoF(i)<<"\t"<<fx[][DoF(i)] << "\t"<< fy[][DoF(i)] <<"\t"<<"red"<<"\n";
    }
    else
    {
        f<<"Coords for DoF #\t"<<DoF(i)<<"\t"<<fx[][DoF(i)] << "\t"<< fy[][DoF(i)] <<"\t"<<"blue"<<"\n";
    }
  }
cout << endl;
    
}

//exec("python ./Triang.py");

int NN=Vh.ndof;

cout<<"NN = "<<NN<< endl;

matrix PP(NN,NN);

real[int] d(NN);


/*

for(int i=0;i<NN;i++){
    for(int j=0;j<NN;j++){
        cpu=clock();
        PP(i,j)=0.0;
        cout<<"Time for PP = "<<clock()-cpu<<endl;
    }
}
*/



PP(DoFnum,DoFnum)=tgv;

cout<<"PP(DoFnum,DoFnum) = "<<PP(DoFnum,DoFnum)<<endl;

d=0;

d(DoFnum)=tgv*SwInj;


