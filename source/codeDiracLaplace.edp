 
 real[int] xdelta = [0.25];//  coord x de delta_i
 real[int] ydelta = [0.25];//  coord x de delta_j
 real[int] cdelta=[1];//  coef    delta_i
  mesh Th=square(16,16, flags=1);
  verbosity=0;

  int c = 0, dop = 0;

macro area() (0.2<=x) // 

//(0.2<=x)&(x<=0.3)&(0.2<=y)&(y<=0.3)





 fespace Vh(Th,P1);     // P1 FE space
 Vh split,split2, split3;

 split=0.0+3*((square(x-0.25)+square(y-0.25))<0.0125*0.0125);

 plot(split, wait=1, cmm="split");

 split2=0.0+5*((square(x-0.25)+square(y-0.25))<0.005*0.005);

 split3=0.0+7*((square(x-0.25)+square(y-0.25))<0.00025*0.00025);

 mesh Th2=splitmesh(Th,1);//+3*split);

plot(Th2, wait=1, cmm="before split");

//exit(0);

Th=splitmesh(Th2,1+2*split2);

Th2=splitmesh(Th,1+split);
//
Th=splitmesh(Th,1+2*split3);

Th2=splitmesh(Th,1+split);
//
Th=Th2;


plot(Th, wait=1, cmm="after split");

 matrix D = interpolate(Vh,xdelta,ydelta, op=dop, composante=c); // the interpolation matrix  
 // at point (xdelta[j],ydelta[i] ) \hfilll
 // so $D_ij = w^i((xdelta[j],ydelta[j]) $ where $w^i$ are the basic function of $V_h$. 
 
 Vh uh,vh,Q;  // unkown and test function. 
 func g=0;                 //  boundary condition function
 Vh b;
 b[]= D*cdelta;
 Q=b;
 plot(Q, wait=1, cmm="Flow");
 b[]= -b[];
 problem laplace(uh,vh) =                    //  definion of  the problem 
    int2d(Th)( dx(uh)*dx(vh) + dy(uh)*dy(vh) ) //  bilinear form
  + b[]                         //  linear form of the rhs (so an array)
  + on(1,2,3,4,uh=0) ;          //  boundary condition form

  laplace; // solve the problem plot(uh); // to see the result
  
  plot(uh,wait=1,dim=3,fill=1);