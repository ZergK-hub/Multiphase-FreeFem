mesh Th=square(10,10,flags=1);
real[int] xx = [.3, .4], yy = [.1, .4];
int c = 0, dop = 0;
real[int] dd = [1, 2];

fespace Vh(Th,P1); 

matrix Ixx = interpolate(Vh, xx, yy, op=dop, composante=c);
cout << Ixx << endl;
Vh ww;

ww[] = Ixx*dd;

plot(ww, wait=1,fill=1, value=1, cmm="original mesh");

mesh Th2=splitmesh(Th, 1+3);

fespace Wh(Th2,P1);

Wh vv;

matrix Ixx2 = interpolate(Wh, xx, yy, op=dop, composante=c);

vv[] = Ixx2*dd;

plot(vv, wait=1, fill=1, value=1, cmm="splitted mesh");

cout << "Number of degree of freedom = " << Vh.ndof << endl;
cout << "Number of degree of freedom / ELEMENT = " << Vh.ndofK << endl;
int TNumber = Th(0.3, 0.1).nuTriangle; //the triangle number in point {0;0}
cout<<"the triangle number = "<<TNumber<<endl;
int k = TNumber, kdf = Vh.ndofK; 
cout << "Degree of freedom of element " << k << ":" << endl;
for (int i = 0; i < kdf; i++)
 cout << Vh(k,i) << " ";
 cout << endl;

cout << "Number of degree of freedom = " << Wh.ndof << endl;
cout << "Number of degree of freedom / ELEMENT = " << Wh.ndofK << endl;
int TNumber2 = Th2(0.3, 0.1).nuTriangle; //the triangle number in point {0;0}
cout<<"the triangle number = "<<TNumber2<<endl;
int k2 = TNumber2, kdf2 = Wh.ndofK; 
cout << "Degree of freedom of element " << k2 << ":" << endl;
for (int i = 0; i < kdf2; i++)
 cout << Wh(k,i) << " ";
 cout << endl;